#!/usr/bin/env bash
# Run a command on all Git repos under a path

# check args is >= 2
if ! [ "$#" -ge 2 ]; then
    echo -e "Missing arguments!\n"
    echo -e "Check usage: git-all <path-to-parent-dir> <command> <command-args>\n"
  exit 1
fi

_path="$1"
_command="${*:2}" # 2nd to nth

# Change dir to inputted path if valid
if [ -d "$_path" ]; then
  cd "$_path" || exit
fi

# Lib
_queue() {
  local _repo _path

  _repo="$1"
  _path="${_repo%.git/}"

  # run one by one
  # sem -j 1 "cd $_path; $_command"

  # run max of cpu cores
  # sem -j+0 "cd $_path; $_command"

  # run n in parallel
  # NOTE: GitHub limit is 4 simultaneous connections
  # sem -j 4 "$_command" "$path"
  sem --jobs 4 "cd $_path; $_command; printf '\n'"
}

# Main
if [ -f "$GIT_ALL_IGNORE_FILE" ]; then
  mapfile -t repos < <(\
                       fd -t d '\.git$' \
                       --unrestricted \
                       --exclude "**/*cache*" \
                       --exclude "**/Trash/" \
                       --ignore-file "$GIT_ALL_IGNORE_FILE" \
                      )
else
  mapfile -t repos < <(\
                       fd -t d '\.git$' \
                       --unrestricted \
                       --exclude "**/*cache*" \
                       --exclude "**/Trash/" \
                      )
fi

for _repo in "${repos[@]}"; do
  _queue "$_repo"
done

# wait for tasks to finish
sem --wait
